{"version":3,"sources":["hookscomponents/AprToApy.js","hookscomponents/ApyToApr.js","App.js","reportWebVitals.js","index.js"],"names":["AprToApy","useState","yourApr","setYourApr","period","setPeriod","total","setTotal","className","onSubmit","e","preventDefault","Math","pow","Number","type","class","value","onChange","target","isNaN","toFixed","ApyToApr","yourApy","setYourApy","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d5e380b.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nconst AprToApy = () => {\n\n   const [ yourApr, setYourApr ] = useState(\"\")\n   const [ period, setPeriod ] = useState (\"\")\n   const [ total, setTotal ] = useState ()\n\n   const handleTotal = (e) => {\n    e.preventDefault()\nsetTotal  (((Math.pow(1+ ((Number(yourApr)/100)/period) , period)) - 1) * 100)\n\n\n}\n\n\n    return(\n\n        <div className='mt-3'>\n            <h1>APR to APY</h1>\n            <div className='d-inline-flex'>\n            <form className=\"row align-items-center w-100\" onSubmit={handleTotal}>\n                <input type=\"text\" class=\"form-control w-auto\" value={yourApr} onChange={(e) => setYourApr(e.target.value)}>\n                </input>\n                <span className='w-auto m-5'>% APR compounding</span>\n                <select className=\"form-select w-auto\" value={period} onChange={(e) => setPeriod(Number(e.target.value))} >\n                        <option value=\"\"></option>\n                        <option value=\"1\">annualy</option>\n                        <option value=\"2\">semester</option>\n                        <option value=\"12\">monthly</option>\n                        <option value=\"52\">weekly</option>\n                        <option value=\"365\">daily</option>\n                </select>\n                <span className='w-auto m-5'>is</span>\n            <button class=\"btn btn-secondary w-auto p-2\" type=\"submit\" >Calculate</button>\n            <p className='pt-2'>{ isNaN(Number(total).toFixed(2)) ? (\"0.00\") : ((Number(total).toFixed(2))) } % APY</p>\n            </form>\n\n            </div>\n           \n            \n        </div>\n    )\n}\n\n\nexport default AprToApy;","import React, {useState} from 'react';\n\nconst ApyToApr = () => {\n\n       const [yourApy, setYourApy] = useState(\"\")\n       const [period, setPeriod] = useState(\"\")\n       const [total, setTotal] = useState(\"\")\n\n       const handleTotal = (e) => {\n            e.preventDefault()\n            setTotal (((Math.pow (1+ (Number(yourApy/100)) , (1/period))) -1) * period * 100)\n       }\n\n       \n\n    return (\n        <div>\n               <h1 className='pt-5'>APY to APR</h1>\n\n               <div className='d-inline-flex'>\n               <form className=\"row align-items-center w-100\" onSubmit={handleTotal}>\n\n<input className=\"form-control w-auto\" type=\"text\" value={yourApy} onChange={(e) => setYourApy (e.target.value)}></input>\n\n<span className='w-auto m-5'>% APY compounding</span>\n\n<select class=\"form-select w-auto\"value={period} onChange={(e) => setPeriod(Number(e.target.value))}>\n        <option value=\"\"></option>\n        <option value=\"1\">annualy</option>\n        <option value=\"2\">semester</option>\n        <option value=\"12\">monthly</option>\n        <option value=\"52\">weekly</option>\n        <option value=\"365\">daily</option>\n</select>\n\n<span className='w-auto m-5'>is</span>\n\n    <button class=\"btn btn-secondary w-auto p-2\" type=\"submit\" >Calculate</button>\n\n<p className='pt-2'>{isNaN(Number(total).toFixed(2)) ? (\"0.00\") : (Number(total).toFixed(2))} % APR</p>\n\n    </form>           \n\n               </div>\n\n            \n            \n        </div>\n   \n        \n          )\n\n}\n\nexport default ApyToApr;","import './App.css';\nimport AprToApy from './hookscomponents/AprToApy';\nimport ApyToApr from './hookscomponents/ApyToApr';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        \n      </header>\n\n      <main className=\"App-main\">\n        \n          <AprToApy />\n          <ApyToApr />\n\n      </main>\n\n       \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}