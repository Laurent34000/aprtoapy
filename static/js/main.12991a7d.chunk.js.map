{"version":3,"sources":["components/AprToApy.js","components/ApyToApr.js","App.js","reportWebVitals.js","index.js"],"names":["AprToApy","state","yourapr","period","total","handleApr","e","setState","target","value","handlePeriod","exe","preventDefault","Math","pow","onSubmit","this","type","onChange","isNaN","Number","toFixed","Component","ApyToApr","yourapy","handleApy","parseInt","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12991a7d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\n\n\nclass AprToApy extends Component {\n\n        state = {\n            yourapr: \"\",\n            period: \"\",\n            total:\"\",\n\n        }\n\n        handleApr = (e) => {\n\n           this.setState({\n                yourapr: (e.target.value)\n\n           })\n        }\n\n        handlePeriod = (e) => {\n\n            this.setState({\n                period: (e.target.value)\n            })\n        }\n\n        exe = (e) => {\n            e.preventDefault()\n            this.setState({\n                total:([Math.pow(1+((this.state.yourapr/100)/this.state.period),this.state.period)-1] * 100 )\n                \n            })\n        }\n    \n    render() {\n            return <div>\n                <h1>Apr to Apy</h1>\n                \n                <form onSubmit={this.exe}> \n                <div>\n                    <input type=\"text\" value={this.state.yourapr} onChange={this.handleApr}></input> % APR <p>compounding</p>\n                </div>\n                <div> \n                    <select value={this.state.value} onChange={this.handlePeriod}>\n                        <option value=\"\"></option>\n                        <option value=\"1\">annualy</option>\n                        <option value=\"2\">semester</option>\n                        <option value=\"12\">monthly</option>\n                        <option value=\"52\">weekly</option>\n                        <option value=\"365\">daily</option>\n                </select> is\n                    \n                </div>\n                <div>\n                    <button type=\"submit\">Enter</button>\n                </div> \n            {isNaN (Number(this.state.total).toFixed(2)) ? (\"0.00\") : (Number(this.state.total).toFixed(2))} % Apy\n\n                </form> \n\n                </div>\n\n    }\n}\n\nexport default AprToApy;","import React, {Component} from 'react';\n\n\nclass ApyToApr extends Component {\n\n  state = {\n    yourapy:'',\n    period: '',\n    total:'',\n  }\n\n\n  handleApy = (e) => {\n\n    this.setState({\n      yourapy: (e.target.value)\n    })\n  }\n  handlePeriod = (e) =>{\n\n    this.setState({\n      period: (e.target.value)\n    })\n\n  }\n\n    exe = (e) => {\n     e.preventDefault()\n      this.setState({ \n    total:([Math.pow (1 + parseInt(this.state.yourapy)/100, 1/parseInt(this.state.period) ) -1] * [parseInt(this.state.period)*100] )\n\n  })\n  \n  \n}\n\n    render() {\n\n    return  (\n    \n      <div>\n        <h1> Apy to Apr</h1>\n        <form onSubmit={this.exe}>\n              <div>\n        <input type='text' value= {this.state.yourapy} onChange={this.handleApy}/> % APY <p>compounding</p>\n              </div>\n\n              <div>\n        <select value={this.state.period} onChange={this.handlePeriod}>\n              <option value=\"\"></option>\n              <option value= \"1\">annual</option>\n              <option value=\"2\">semestre</option>\n              <option value=\"12\">monthly</option>\n              <option value=\"52\">weekly</option>\n              <option value=\"365\">daily</option>\n\n        </select> is\n              </div>\n\n              <div>\n          <button type=\"submit\">Enter</button>\n              </div>\n              </form>\n            \n             {isNaN(Number(this.state.total).toFixed(2)) ? (\"0.00\") : ((Number(this.state.total).toFixed(2)))} % APR\n            \n        </div>)}\n\n    }\n                \nexport default ApyToApr;","import './App.css';\nimport AprToApy from './components/AprToApy';\nimport ApyToApr from './components/ApyToApr';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n          En cours de d√©veloppement\n\n      </header>\n\n      <main className=\"App-main\">\n        \n          <AprToApy />\n          <ApyToApr />\n\n      </main>\n\n       \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}